<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.sys.UserDao">

    <!--返回实体对象-->
    <sql id="columns">
        u.id as "id",
        u.username as "username",
        u.nickname as "nickname",
        u.password as "password",
        u.last_login_time AS "lastLoginTime",
        u.status AS "status",
        u.create_name_id AS "createNameId",
        u.create_time AS "createTime",
        u.last_update_name_id AS "lastUpdateNameId",
        u.last_update_time as "lastUpdateTime",
        case when u.status = '0' then '禁止登录' else '有效' end AS "statusName"
    </sql>

    <sql id="joins">
    </sql>

    <!-- 插入数据-->
    <insert id="insert" parameterType="User">
        insert into sys_user (id,username,nickname,password,last_login_time,status,create_name_id,create_time,last_update_name_id,last_update_time)
        values (#{id,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR},#{nickname,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{lastLoginTime,jdbcType=TIMESTAMP},
        #{status,jdbcType=VARCHAR},#{createNameId,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{lastUpdateNameId,jdbcType=VARCHAR},#{lastUpdateTime,jdbcType=TIMESTAMP})
    </insert>

    <!--修改人员信息-->
    <update id="update" parameterType="User">
        update sys_user
        set username = #{username,jdbcType=VARCHAR},
        nickname = #{nickname,jdbcType=VARCHAR},
        status = #{status,jdbcType=VARCHAR},
        last_update_name_id = #{lastUpdateNameId,jdbcType=VARCHAR},
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updatePassword" parameterType="User">
        update sys_user
        set password = #{password,jdbcType=VARCHAR},
        last_update_name_id = #{lastUpdateNameId,jdbcType=VARCHAR},
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateLastLoginTime" parameterType="User">
        update sys_user
        set last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
        last_update_name_id = #{lastUpdateNameId,jdbcType=VARCHAR},
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--用户禁止登录-->
    <update id="updateStatus" parameterType="java.lang.String">
        update sys_user set status = '0' where id = #{id,jdbcType=VARCHAR}
    </update>

    <!--删除人员-->
    <delete id="delete" parameterType="java.lang.String">
        DELETE from sys_user where id = #{id,jdbcType=VARCHAR}
    </delete>

    <!--查询人员信息-->
    <select id="get" parameterType="java.util.HashMap" resultType="User">
        SELECT <include refid="columns"/> FROM sys_user u
        WHERE 1 = 1
        <if test="id != null and id != ''">
            and u.id = #{id,jdbcType=VARCHAR}
        </if>
        <if test="username != null and username != ''">
            and u.username = #{username,jdbcType=VARCHAR}
        </if>
    </select>

    <!--查询所有人员列表-->
    <select id="select" parameterType="User" resultType="User">
        SELECT <include refid="columns"/> FROM sys_user u
        WHERE 1 = 1
        <if test="status != null and status != ''">
            and status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="username != null and username != ''">
            and username LIKE CONCAT('%',#{username,jdbcType=VARCHAR}, '%')
        </if>
        <if test="nickname != null and nickname != ''">
            and nickname LIKE CONCAT('%',#{nickname,jdbcType=VARCHAR}, '%')
        </if>
        ORDER BY lastUpdateTime DESC
    </select>
</mapper>